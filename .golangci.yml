# golangci-lint is a Go linters aggregator, https://golangci-lint.run/
#
# instalation: binary will be $(go env GOPATH)/bin/golangci-lint
#   curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.27.0
#   golangci-lint --version
#
# run linter:
#   golangci-lint run
#
# integrate with vscode:
#   "go.lintTool":"golangci-lint",
#   "go.lintFlags": [
#     "--fast"
#   ]

run:
  modules-download-mode: readonly

issues:
  exclude:
     - Using the variable on range scope `tt` in function literal
     - paramTypeCombine
  exclude-dirs:
     - tests
     - vendor
     - testapp
  exclude-rules:
    - linters:
        - contextcheck
      path: "."

    - linters:
        - lll
      source: "Output: "

    - linters:
        - gosec
      source: opts.SkipTLSVerify

    - linters:
        - gosec
      source: "randomDelayMs := rand.Int63n"

    - linters:
        - errcheck
      text: "formatter.Print"

    - linters:
        - stylecheck
      text: "ST1023: should omit type"
   
    - linters:
        - funlen
        - revive
        - goconst
        - lll
        - gosec
      path: _test\.go

linters:
  enable:
    - bodyclose
    - dogsled
    - dupl
    - errcheck
    - exhaustive
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - mnd
    - gomodguard #
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - gosimple
    - staticcheck
    - unused
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - revive
    - rowserrcheck
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - whitespace
  disable:
    - depguard
    - asciicheck
    - gochecknoglobals
    - gocognit
    - godot
    - godox
    - err113
    - nestif
    - prealloc
    - testpackage
    - wsl
  presets:
    - bugs
    - unused
  fast: false

linters-settings:
  shadow: true
  dupl:
    threshold: 100
  errcheck:
    check-type-assertions: true
    check-blank: true
  exhaustive:
    default-signifies-exhaustive: false
  funlen:
    lines: 100
    statements: 50
  nestif:
    min-complexity: 4
    goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    min-complexity: 15
  goimports:
    local-prefixes: github.com/eset/grpc-rest-proxy
  golint:
    min-confidence: 0
  mnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  govet:
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  depguard:
    list-type: blacklist
    include-go-root: false
    packages:
      - github.com/prometheus/common/log
    packages-with-error-message:
      # specify an error message to output when a blacklisted package is used
      - github.com/prometheus/common/log: "logging is allowed only by github.com/sirupsen/logrus"
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
    ignore-words:
      - bal
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
