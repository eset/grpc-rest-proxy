# Default values for grpc-rest-proxy.

# number of replicas to deploy
# https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# grpc-rest-proxy configuration
grpcRestProxy:
  # This sets the address of target grpc server for the proxy to connect to (host:port of grpc service that you want to proxy).
  grpcTargetAddr: "localhost:50051"
  # Set extra args to pass to the grpc-rest-proxy
  extraArgs: []
    # - "--service.jsonencoder.emitUnpopulated=true"
    # - "--service.jsonencoder.emitDefaultValues=true"

image:
  repository: grpcrestproxy.azurecr.io/grpc-rest-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /status
    port: http

readinessProbe:
  httpGet:
    path: /status
    port: http

# https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

podDisruptionBudget:
  enabled: false
  maxUnavailable: 1
  annotations: {}

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
